2023-02-05 09:18:37,144 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: win32
Python: 3.9.15 | packaged by conda-forge | (main, Nov 22 2022, 08:41:22) [MSC v.1929 64 bit (AMD64)]
CUDA available: True
GPU 0: NVIDIA GeForce GTX 1650
CUDA_HOME: None
MSVC: 用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.32.31329 版
GCC: n/a
PyTorch: 1.13.1+cu116
PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192829337
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.6
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -IC:/actions-runner/_work/pytorch/pytorch/builder/windows/mkl/include -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.1+cu116
OpenCV: 4.7.0
MMCV: 1.7.1
MMCV Compiler: MSVC 192829924
MMCV CUDA Compiler: 11.6
MMClassification: 0.25.0+
------------------------------------------------------------

2023-02-05 09:18:37,145 - mmcls - INFO - Distributed training: False
2023-02-05 09:18:37,248 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(type='MobileNetV2', widen_factor=1.0),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=5,
        in_channels=1280,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, 5)))
data = dict(
    samples_per_gpu=32,
    workers_per_gpu=2,
    train=dict(
        type='CustomDataset',
        data_prefix='data/flower_dataset/train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224, backend='pillow'),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='CustomDataset',
        data_prefix='data/flower_dataset/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1), backend='pillow'),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='CustomDataset',
        data_prefix='data/flower_dataset/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1), backend='pillow'),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=4e-05)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', gamma=0.98, step=1)
runner = dict(type='EpochBasedRunner', max_epochs=5)
checkpoint_config = dict(interval=5)
log_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'mobilenet_v2_batch256_imagenet_20200708-3b2dc3af.pth'
resume_from = None
workflow = [('train', 1)]
work_dir = './work_dirs\mobilenet-v2_flower'
gpu_ids = range(0, 1)

2023-02-05 09:18:37,250 - mmcls - INFO - Set random seed to 1002619250, deterministic: False
2023-02-05 09:18:37,840 - mmcls - INFO - load checkpoint from local path: mobilenet_v2_batch256_imagenet_20200708-3b2dc3af.pth
2023-02-05 09:18:38,160 - mmcls - WARNING - The model and loaded state dict do not match exactly

size mismatch for head.fc.weight: copying a param with shape torch.Size([1000, 1280]) from checkpoint, the shape in current model is torch.Size([5, 1280]).
size mismatch for head.fc.bias: copying a param with shape torch.Size([1000]) from checkpoint, the shape in current model is torch.Size([5]).
2023-02-05 09:18:38,162 - mmcls - INFO - Start running, host: 10728@LAPTOP-KE4LA0NL, work_dir: D:\sjtu-openmmlab-tutorial-main\work_dirs\mobilenet-v2_flower
2023-02-05 09:18:38,162 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-02-05 09:18:38,163 - mmcls - INFO - workflow: [('train', 1)], max: 5 epochs
2023-02-05 09:18:38,163 - mmcls - INFO - Checkpoints will be saved to D:\sjtu-openmmlab-tutorial-main\work_dirs\mobilenet-v2_flower by HardDiskBackend.
2023-02-05 09:18:57,755 - mmcls - INFO - Epoch [1][10/72]	lr: 5.000e-03, eta: 0:11:22, time: 1.949, data_time: 1.031, memory: 2456, loss: 1.2015
2023-02-05 09:18:59,570 - mmcls - INFO - Epoch [1][20/72]	lr: 5.000e-03, eta: 0:06:02, time: 0.182, data_time: 0.010, memory: 2456, loss: 0.4818
2023-02-05 09:19:01,385 - mmcls - INFO - Epoch [1][30/72]	lr: 5.000e-03, eta: 0:04:14, time: 0.181, data_time: 0.010, memory: 2456, loss: 0.4528
2023-02-05 09:19:03,204 - mmcls - INFO - Epoch [1][40/72]	lr: 5.000e-03, eta: 0:03:19, time: 0.182, data_time: 0.010, memory: 2456, loss: 0.4971
2023-02-05 09:19:05,017 - mmcls - INFO - Epoch [1][50/72]	lr: 5.000e-03, eta: 0:02:45, time: 0.181, data_time: 0.010, memory: 2456, loss: 0.5891
2023-02-05 09:19:06,853 - mmcls - INFO - Epoch [1][60/72]	lr: 5.000e-03, eta: 0:02:22, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.4574
2023-02-05 09:19:08,671 - mmcls - INFO - Epoch [1][70/72]	lr: 5.000e-03, eta: 0:02:05, time: 0.182, data_time: 0.010, memory: 2456, loss: 0.4022
2023-02-05 09:19:18,832 - mmcls - INFO - Epoch(val) [1][18]	accuracy_top-1: 88.9085, accuracy_top-5: 100.0000
2023-02-05 09:19:23,016 - mmcls - INFO - Epoch [2][10/72]	lr: 4.900e-03, eta: 0:01:56, time: 0.408, data_time: 0.214, memory: 2456, loss: 0.3714
2023-02-05 09:19:24,843 - mmcls - INFO - Epoch [2][20/72]	lr: 4.900e-03, eta: 0:01:45, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.3811
2023-02-05 09:19:26,665 - mmcls - INFO - Epoch [2][30/72]	lr: 4.900e-03, eta: 0:01:36, time: 0.182, data_time: 0.010, memory: 2456, loss: 0.4918
2023-02-05 09:19:28,485 - mmcls - INFO - Epoch [2][40/72]	lr: 4.900e-03, eta: 0:01:28, time: 0.182, data_time: 0.010, memory: 2456, loss: 0.3376
2023-02-05 09:19:30,316 - mmcls - INFO - Epoch [2][50/72]	lr: 4.900e-03, eta: 0:01:21, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.3416
2023-02-05 09:19:32,147 - mmcls - INFO - Epoch [2][60/72]	lr: 4.900e-03, eta: 0:01:15, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.3120
2023-02-05 09:19:33,973 - mmcls - INFO - Epoch [2][70/72]	lr: 4.900e-03, eta: 0:01:09, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.3546
2023-02-05 09:19:35,733 - mmcls - INFO - Epoch(val) [2][18]	accuracy_top-1: 92.6056, accuracy_top-5: 100.0000
2023-02-05 09:19:39,903 - mmcls - INFO - Epoch [3][10/72]	lr: 4.802e-03, eta: 0:01:06, time: 0.407, data_time: 0.217, memory: 2456, loss: 0.3695
2023-02-05 09:19:41,732 - mmcls - INFO - Epoch [3][20/72]	lr: 4.802e-03, eta: 0:01:01, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.3855
2023-02-05 09:19:43,561 - mmcls - INFO - Epoch [3][30/72]	lr: 4.802e-03, eta: 0:00:56, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.2398
2023-02-05 09:19:45,389 - mmcls - INFO - Epoch [3][40/72]	lr: 4.802e-03, eta: 0:00:52, time: 0.182, data_time: 0.010, memory: 2456, loss: 0.4139
2023-02-05 09:19:47,219 - mmcls - INFO - Epoch [3][50/72]	lr: 4.802e-03, eta: 0:00:48, time: 0.183, data_time: 0.011, memory: 2456, loss: 0.3134
2023-02-05 09:19:49,057 - mmcls - INFO - Epoch [3][60/72]	lr: 4.802e-03, eta: 0:00:44, time: 0.184, data_time: 0.010, memory: 2456, loss: 0.3261
2023-02-05 09:19:50,885 - mmcls - INFO - Epoch [3][70/72]	lr: 4.802e-03, eta: 0:00:41, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.2984
2023-02-05 09:19:52,636 - mmcls - INFO - Epoch(val) [3][18]	accuracy_top-1: 92.4296, accuracy_top-5: 100.0000
2023-02-05 09:19:56,789 - mmcls - INFO - Epoch [4][10/72]	lr: 4.706e-03, eta: 0:00:38, time: 0.405, data_time: 0.215, memory: 2456, loss: 0.2688
2023-02-05 09:19:58,614 - mmcls - INFO - Epoch [4][20/72]	lr: 4.706e-03, eta: 0:00:34, time: 0.183, data_time: 0.011, memory: 2456, loss: 0.2760
2023-02-05 09:20:00,444 - mmcls - INFO - Epoch [4][30/72]	lr: 4.706e-03, eta: 0:00:31, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.1736
2023-02-05 09:20:02,274 - mmcls - INFO - Epoch [4][40/72]	lr: 4.706e-03, eta: 0:00:28, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.1728
2023-02-05 09:20:04,098 - mmcls - INFO - Epoch [4][50/72]	lr: 4.706e-03, eta: 0:00:25, time: 0.182, data_time: 0.010, memory: 2456, loss: 0.1826
2023-02-05 09:20:05,933 - mmcls - INFO - Epoch [4][60/72]	lr: 4.706e-03, eta: 0:00:22, time: 0.184, data_time: 0.010, memory: 2456, loss: 0.2481
2023-02-05 09:20:07,761 - mmcls - INFO - Epoch [4][70/72]	lr: 4.706e-03, eta: 0:00:19, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.3144
2023-02-05 09:20:09,500 - mmcls - INFO - Epoch(val) [4][18]	accuracy_top-1: 91.9014, accuracy_top-5: 100.0000
2023-02-05 09:20:13,655 - mmcls - INFO - Epoch [5][10/72]	lr: 4.612e-03, eta: 0:00:16, time: 0.405, data_time: 0.219, memory: 2456, loss: 0.2143
2023-02-05 09:20:15,494 - mmcls - INFO - Epoch [5][20/72]	lr: 4.612e-03, eta: 0:00:13, time: 0.184, data_time: 0.010, memory: 2456, loss: 0.2538
2023-02-05 09:20:17,332 - mmcls - INFO - Epoch [5][30/72]	lr: 4.612e-03, eta: 0:00:10, time: 0.184, data_time: 0.010, memory: 2456, loss: 0.2731
2023-02-05 09:20:19,161 - mmcls - INFO - Epoch [5][40/72]	lr: 4.612e-03, eta: 0:00:08, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.1823
2023-02-05 09:20:20,988 - mmcls - INFO - Epoch [5][50/72]	lr: 4.612e-03, eta: 0:00:05, time: 0.183, data_time: 0.010, memory: 2456, loss: 0.1711
2023-02-05 09:20:22,813 - mmcls - INFO - Epoch [5][60/72]	lr: 4.612e-03, eta: 0:00:03, time: 0.182, data_time: 0.010, memory: 2456, loss: 0.2535
2023-02-05 09:20:24,645 - mmcls - INFO - Epoch [5][70/72]	lr: 4.612e-03, eta: 0:00:00, time: 0.184, data_time: 0.010, memory: 2456, loss: 0.1994
2023-02-05 09:20:24,881 - mmcls - INFO - Saving checkpoint at 5 epochs
2023-02-05 09:20:26,539 - mmcls - INFO - Epoch(val) [5][18]	accuracy_top-1: 92.7817, accuracy_top-5: 100.0000
